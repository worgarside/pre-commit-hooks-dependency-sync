[tool.poetry]
name = "pre-commit-hooks-dependency-sync"
version = "1.0.1"
description = "Pre-commit hook to sync your additional dependencies with your project's environment"
authors = ["Will Garside <worgarside@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
sync-dependencies = "pre_commit_hooks_dependency_sync.main:main"

[tool.poetry.dependencies]
python = "^3.11"
tomli = "^2.0.1"
pyyaml = "^6.0.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

# Tool Configs

[tool.mypy]
exclude = ["_local_sandbox"]
follow_imports = "normal"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true

warn_return_any = true
warn_unused_ignores = true
warn_unused_configs = true
warn_redundant_casts = true

no_implicit_optional = true
strict_optional = true

strict_equality = true
show_error_codes = true

[tool.codespell]
skip = '*.json,*.csv,*.xml,*.lock'

[tool.ruff]
fix = true
line-length = 90
lint.select = [
  "A",   # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
  "ARG", # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
  "B",   # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
  "C4",  # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
  "COM", # https://docs.astral.sh/ruff/rules/#flake8-commas-com
  "D",   # https://docs.astral.sh/ruff/rules/#pydocstyle-d
  "E",   # https://docs.astral.sh/ruff/rules/#error-e
  "ERA", # https://docs.astral.sh/ruff/rules/#eradicate-era
  "F",   # https://docs.astral.sh/ruff/rules/#pyflakes-f
  "FA",  # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
  "FBT", # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
  "G",   # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
  "I",   # https://docs.astral.sh/ruff/rules/#isort-i
  "ICN", # https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
  "LOG", # https://docs.astral.sh/ruff/rules/#flake8-logging-log
  "N",   # https://docs.astral.sh/ruff/rules/#pep8-naming-n
  "PGH", # https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
  "PIE", # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
  "PL",  # https://docs.astral.sh/ruff/rules/#pylint-pl
  "PT",  # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
  "PTH", # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
  "Q",   # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
  "RET", # https://docs.astral.sh/ruff/rules/#flake8-return-ret
  "RSE", # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
  "RUF", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
  "S",   # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
  "SIM", # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
  "TRY", # https://docs.astral.sh/ruff/rules/#tryceratops-try
  "UP",  # https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "W",   # https://docs.astral.sh/ruff/rules/#warning-w
]
lint.ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.lint.pycodestyle]
max-line-length = 115

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.vulture]
min_confidence = 70
paths = ["pre_commit_hooks_dependency_sync"]
sort_by_size = true
